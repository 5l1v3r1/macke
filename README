MACKE - Modular and Compositional Analysis with KLEE Engine
===========================================================

Description of included scripts
-------------------------------
+ analyze_klee_test.py - Reads KLEE .ptr.err files to analyze infected functions, their files and line numbers
+ batch_generate_unit.py - Defunct. Has no purpose at the moment, except for Ngircd experiments. IGNORE! 
+ batch_klee.py - Runs KLEE on the seperate unit tests (generated by batch_generate_units.py) and stores results in respective output folders for isolated functions. Ideally, should be run right after generating separate unit test files. 
+ batch_separate_units.py - Runs generate_seperate_unit script in batch mode for all C files in the source directory. Ideally, the starting point of the full MACKE framework. 
+ branch_analyzer.py - Analyzes static elements (condition, true-block, false-block) of an if-else block. 
+ c_keywords.py - For playing around with libclang. Lists out keywords and lexical structures for C language sources. IGNORE!
+ callee.py - Analyzes caller-callee relationship between all functions (defined within the project source) and lists them. 
+ cindex-dump.py - Dump whole abstract syntax tree of the project under test. Can be ignored, serves no practical purpose in MACKE. 
+ compose_units.py - Performs the first step of compositional analysis. Compares test output files (.ptr.err and others) to get chain of affected functions. Gets a list of outlier functions and writes everything to composition.test. Usually doesn't need to be run separately. Essential functions called by batch_klee.py. 
+ copy_main_unit.py - Copy main function into it's own "unit test". Usually doesn't need to be run separately. 
